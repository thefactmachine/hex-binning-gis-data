library("nnet", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
# Returns the stack of RScript files
rscript_stack <- function() {
Filter(Negate(is.null), lapply(sys.frames(), function(x) x$ofile))
}
# Returns the current RScript file path
rscript_current <- function() {
stack <- rscript_stack()
r <- as.character(stack[length(stack)])
first_char <- substring(r, 1, 1)
if (first_char != '~' && first_char != .Platform$file.sep) {
r <- file.path(getwd(), r)
}
r
}
# Sources relative to the current script
source_relative <- function(relative_path, ...) {
source(file.path(dirname(rscript_current()), relative_path), ...)
}
source_relative()
?getwd()
dir()
?file.path
dirs
source('~/.active-rstudio-document', echo=TRUE)
?setwd
source('~/.active-rstudio-document', echo=TRUE)
library(rgdal); library(plyr); library(fields)
rm(list=ls())
getwd()
hbin<-hexbin(df$X, df$Y,xbins=50,IDs=TRUE)
hvp<-plot(hbin)
mtrans<-hexTapply(hbin,df$Z,mean,na.rm=TRUE)
pushHexport(hvp$plot.vp)
cCut <- seq(0,0.5, by=0.1)
grid.hexagons(hbin,style='colorscale',pen=0,border='white',use.count=FALSE,
minarea = 0.04, maxarea = 1, mincnt = 500, maxcnt = 3000,
cell.at=mtrans, colramp=LinGray, colorcut= cCut)
popViewport()
library("hexbin", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
hbin<-hexbin(df$X, df$Y,xbins=50,IDs=TRUE)
hvp<-plot(hbin)
mtrans<-hexTapply(hbin,df$Z,mean,na.rm=TRUE)
pushHexport(hvp$plot.vp)
cCut <- seq(0,0.5, by=0.1)
grid.hexagons(hbin,style='colorscale',pen=0,border='white',use.count=FALSE,
minarea = 0.04, maxarea = 1, mincnt = 500, maxcnt = 3000,
cell.at=mtrans, colramp=LinGray, colorcut= cCut)
popViewport()
source('~/Google Drive/R-StatisticalLanguage/SpatialProjects/ACT-ThinPlate/SA1-Initial.R', echo=TRUE)
save(df, popDensity.RData)
save(df, file = "popDensity.RData")
getwd('/Users/zurich/Google Drive/R-StatisticalLanguage/SpatialProjects/HexBin')
getwd('/Users/zurich/Google Drive/R-StatisticalLanguage/SpatialProjects/HexBin')
getwd('/Users/zurich/Google Drive/R-StatisticalLanguage/SpatialProjects/HexBin')
setwd('/Users/zurich/Google Drive/R-StatisticalLanguage/SpatialProjects/HexBin')
load('popDensity.RData')
df <- load('popDensity.RData')
